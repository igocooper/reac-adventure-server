generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  firstName String?
  lastName  String?
  isAdmin   Boolean @default(false)

  // Relation fields
  tokens Token[]
}

enum TokenType {
  EMAIL // used as a short lived token sent to the user's email
  API
}

model Token {
  id         Int       @id @default(autoincrement())
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  type       TokenType
  emailToken String?   @unique // Only used for short lived email tokens
  valid      Boolean   @default(true)
  expiration DateTime

  // Relation fields
  user   User @relation(fields: [userId], references: [id])
  userId Int
}

model Weapon {
  id       Int    @id @default(autoincrement())
  name     String @unique
  imageSrc String

  // Relational fields
  statsId Int         @unique
  stats   WeaponStats @relation(fields: [statsId], references: [id])
}

model WeaponStats {
  id                  Int    @id @default(autoincrement())
  damage              String
  hitChance           Float?
  power               Float?
  criticalChance      Float?
  criticalMultiplier  Float?
  counterAttackChance Float?

  // Relational fields
  weapon Weapon?
}

enum HelmetType {
  FULL_FACE
  LARGE
  MEDIUM
  SMALL
}

model Helmet {
  id       Int        @id @default(autoincrement())
  name     String     @unique
  type     HelmetType
  large    Boolean?   @default(false)
  imageSrc String

  // Relational fields
  statsId Int         @unique
  stats   HelmetStats @relation(fields: [statsId], references: [id])
}

model HelmetStats {
  id                  Int    @id @default(autoincrement())
  defence             Int
  evadeChance         Float?
  criticalChance      Float?
  counterAttackChance Float?

  // Relational fields
  helmet       Helmet?
  resistanceId Int?        @unique
  resitance    Resistance? @relation(fields: [resistanceId], references: [id])
}

model Armor {
  id   Int    @id @default(autoincrement())
  name String @unique

  // Relational fields
  statsId Int        @unique
  stats   ArmorStats @relation(fields: [statsId], references: [id])

  imageUrlsId Int            @unique
  imageUrls   ArmorImageUrls @relation(fields: [imageUrlsId], references: [id])
}

model ArmorImageUrls {
  id        Int     @id @default(autoincrement())
  body      String
  leftArm   String?
  leftHand  String?
  leftLeg   String
  rightArm  String?
  rightHand String?
  rightLeg  String

  // Relational fields
  armor Armor?
}

model ArmorStats {
  id                  Int    @id @default(autoincrement())
  defence             Int
  evadeChance         Float?
  criticalChance      Float?
  counterAttackChance Float?

  // Relational fields
  armor        Armor?
  resistanceId Int?        @unique
  resitance    Resistance? @relation(fields: [resistanceId], references: [id])
}

model Shield {
  id       Int    @id @default(autoincrement())
  name     String @unique
  imageSrc String

  // Relational fields
  statsId Int         @unique
  stats   ShieldStats @relation(fields: [statsId], references: [id])
}

model ShieldStats {
  id                  Int    @id @default(autoincrement())
  defence             Int
  evadeChance         Float?
  criticalChance      Float?
  counterAttackChance Float?

  // Relational fields
  shield       Shield?
  resistanceId Int?        @unique
  resitance    Resistance? @relation(fields: [resistanceId], references: [id])
}

model Bow {
  id   Int    @id @default(autoincrement())
  name String @unique

  // Relational fields
  ImageUrlId Int          @unique
  imageUrls  BowImageUrls @relation(fields: [ImageUrlId], references: [id])
  statsId    Int          @unique
  stats      BowStats     @relation(fields: [statsId], references: [id])
}

model BowImageUrls {
  id             Int    @id @default(autoincrement())
  bowStem        String
  bowString      String
  drawnBowString String
  quiver         String
  arrow          String

  // Relational fields
  bow Bow?
}

model BowStats {
  id                  Int    @id @default(autoincrement())
  damage              String
  hitChance           Float?
  power               Float?
  criticalChance      Float?
  criticalMultiplier  Float?
  counterAttackChance Float?

  // Relational fields
  bow Bow?
}

model Resistance {
  id          Int          @id @default(autoincrement())
  fire        Float?
  water       Float?
  earth       Float?
  wind        Float?
  light       Float?
  dark        Float?
  poison      Float?
  blood       Float?
  armorStats  ArmorStats?
  helmetStats HelmetStats?
  shieldStats ShieldStats?
}
